// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using SmartDrones.Infrastructure.Data;

#nullable disable

namespace SmartDrones.Infrastructure.Migrations
{
    [DbContext(typeof(SmartDronesDbContext))]
    partial class SmartDronesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartDrones.Domain.Entities.Alert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("DroneId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("NUMBER(1)");

                    b.Property<double>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("RiskLevel")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("TIMESTAMP_ALERT")
                        .HasDefaultValueSql("SYSDATE");

                    b.HasKey("Id");

                    b.HasIndex("DroneId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("SmartDrones.Domain.Entities.Drone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT")
                        .HasDefaultValueSql("SYSDATE");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("LastActivity")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_ACTIVITY")
                        .HasDefaultValueSql("SYSDATE");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("SmartDrones.Domain.Entities.SensorData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("DroneId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<double>("Humidity")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Luminosity")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<bool>("SmokeDetected")
                        .HasColumnType("NUMBER(1)");

                    b.Property<double>("Temperature")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("TIMESTAMP_DATA")
                        .HasDefaultValueSql("SYSDATE");

                    b.HasKey("Id");

                    b.HasIndex("DroneId");

                    b.ToTable("SensorData");
                });

            modelBuilder.Entity("SmartDrones.Domain.Entities.Alert", b =>
                {
                    b.HasOne("SmartDrones.Domain.Entities.Drone", "Drone")
                        .WithMany("Alerts")
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drone");
                });

            modelBuilder.Entity("SmartDrones.Domain.Entities.SensorData", b =>
                {
                    b.HasOne("SmartDrones.Domain.Entities.Drone", "Drone")
                        .WithMany("SensorData")
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drone");
                });

            modelBuilder.Entity("SmartDrones.Domain.Entities.Drone", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("SensorData");
                });
#pragma warning restore 612, 618
        }
    }
}
